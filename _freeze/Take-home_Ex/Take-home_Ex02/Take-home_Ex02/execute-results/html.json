{
  "hash": "f29d42c1bcb44027a5f802667dd678cd",
  "result": {
    "markdown": "---\ntitle: \"Take-home_Ex02\"\n\nauthor: Kabeer\ndate: \"February 22, 2024\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  warning: false\n  freeze: true\n---\n\n\nInstalling relevant R packages\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: False\npacman::p_load(sf, sp, spdep, sfdep, tmap, tidyverse, knitr, tibble, dplyr, lubridate, spacetime, stars, plotly)\n```\n:::\n\n\nImporting the Taiwan shapefile\n\n::: {.cell}\n\n```{.r .cell-code}\nTaiwan_mpsz <- st_read(dsn =\"data/geospatial/TAINAN_VILLAGE.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `TAINAN_VILLAGE' from data source \n  `D:\\Kabeer2003\\IS415 - GAA\\Take-home_Ex\\Take-home_Ex02\\data\\geospatial\\TAINAN_VILLAGE.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n```\n:::\n:::\n\nTransforming the Coordinate Reference System from TWD97 to WGS84 to ensure that our geospatial data is compatible with aspatial data\n\n::: {.cell}\n\n```{.r .cell-code}\ncrs_info1 <- st_crs(Taiwan_mpsz)\nprint(crs_info1[1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$input\n[1] \"TWD97\"\n```\n:::\n\n```{.r .cell-code}\nTaiwan_mpsz <- st_transform(Taiwan_mpsz, crs = 4326)\n\ncrs_info1 <- st_crs(Taiwan_mpsz)\nprint(crs_info1[1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$input\n[1] \"EPSG:4326\"\n```\n:::\n:::\n\n\nFiltering the relevant regions using their TownID to zoom the study into specific areas of Taiwan\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_regions_mpsz <- Taiwan_mpsz %>%\n  filter(TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"))\n```\n:::\n\n\nReading the csv file with dengue cases (1998 to 2024)\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_cases <- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n```\n:::\n\nExtracting all dengue cases in the year 2023\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_cases$發病日 <- as.Date(dengue_cases$發病日, format=\"%Y/%m/%d\")\n\n# Filter the data frame for rows where the year is 2023\ndengue_cases_2023 <- dengue_cases[format(dengue_cases$發病日, \"%Y\") == \"2023\", ]\n```\n:::\n\n\nUsing dplyr mutate to add a column 'number_of_weeks\" which indicates the week at any given point in the year\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_cases_2023_by_week <- dengue_cases_2023 %>% \n  mutate(number_of_weeks = isoweek(發病日))\n```\n:::\n\n\nNow filtering the dengue cases that were onset between Weeks 31 and 50 during the year 2023\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_cases_weeks_31_to_50 <- dengue_cases_2023_by_week %>%\n  filter(number_of_weeks >= 31 & number_of_weeks <= 50)\n```\n:::\n\n\nFiltering the relevant fields needed for the scope of this study including the onset date, x and y coordinates of the location where the case was reported.\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_dengue_cases_coords <- dengue_cases_weeks_31_to_50 %>% \n  dplyr::select(發病日, 最小統計區中心點X, 最小統計區中心點Y, number_of_weeks)\n```\n:::\n\n\nRemoving all null values where the X coordinate / Y coordinate is given as 'None'\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_dengue_cases_coords <- filtered_dengue_cases_coords %>%\n  filter(最小統計區中心點X != 'None', 最小統計區中心點Y != 'None')\n```\n:::\n\n\nConverting aspatial data to an sf object using the x and y coordinates\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_dengue_cases_coords_sf <- st_as_sf(filtered_dengue_cases_coords, coords = c(\"最小統計區中心點X\", \"最小統計區中心點Y\"), crs = 4326)\n```\n:::\n\n\nChecking the Coordinate Reference System of our Aspatial data to ensure that our Geospatial and Aspatial Data are compatible with each other (Both should be in WGS84)\n\n::: {.cell}\n\n```{.r .cell-code}\ncrs_info2 <- st_crs(filtered_dengue_cases_coords_sf)\nprint(crs_info2[1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$input\n[1] \"EPSG:4326\"\n```\n:::\n:::\n\n\nNow filtering all dengue cases confined to our study area in Taiwan (Left join between map and filtered coordinates of dengue cases which yields cases found in our study region)\n\n::: {.cell}\n\n```{.r .cell-code}\ntaiwan_dengue_cases_filtered <- st_join(filtered_regions_mpsz, filtered_dengue_cases_coords_sf, left = TRUE)\n\ntaiwan_dengue_cases_filtered <- taiwan_dengue_cases_filtered %>%\n  dplyr::select(VILLCODE, VILLNAME, VILLENG, TOWNID, 發病日, number_of_weeks, geometry)\n```\n:::\n\n\nPlotting the onset of dengue cases on a map to check if we have successfully filtered cases confined to our study area, this object would further be used to create our spacetime cube.\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n\ntm_shape(filtered_regions_mpsz) + \n  tm_polygons(col = \"lightblue\", border.col = \"gray\") +  # Plot the regions\ntm_shape(taiwan_dengue_cases_filtered) +\n  tm_dots(col = \"red\", size = 0.1) +\ntm_layout(main.title = \"Dengue Cases in Study Area (Tainan)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nRemoving entries where the number of weeks is null\n\n::: {.cell}\n\n```{.r .cell-code}\ntaiwan_dengue_cases_filtered <- taiwan_dengue_cases_filtered %>%\n  filter(!is.na(number_of_weeks))\n```\n:::\n\n\nAggregating dengue case data and grouping it by each village and epidemiological week (Gauge cases in each village on a weekly basis)\n\n::: {.cell}\n\n```{.r .cell-code}\naggregated_dengue_cases <- taiwan_dengue_cases_filtered %>%\n  group_by(VILLCODE, VILLNAME, VILLENG, number_of_weeks) %>%\n  summarise(CASE_COUNT = n(), .groups = 'drop')\n```\n:::\n\n\nComputing all possible combinations to account for villages that had zero cases in a week\n\n::: {.cell}\n\n```{.r .cell-code}\nvillages <- aggregated_dengue_cases %>%\n  distinct(VILLCODE, VILLNAME, VILLENG, geometry)\n\nweeks <- 31:50\n\nall_combinations <- crossing(weeks, villages) %>%\n  rename(number_of_weeks = weeks)\n```\n:::\n\n\nLeft joining our current data with all possible combinations\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_data <- left_join(all_combinations, aggregated_dengue_cases, \n                         by = c(\"VILLCODE\", \"VILLNAME\", \"VILLENG\", \"number_of_weeks\", \"geometry\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_data <- joined_data %>%\n  mutate(CASE_COUNT = if_else(is.na(CASE_COUNT), 0, CASE_COUNT))\n```\n:::\n\n\nAdding an end date column which marks the end of the week to gauge the number of cases onset each week\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_date <- as.Date(\"2023-01-02\")\n\njoined_data <- joined_data %>%\n  mutate(week_end_date = base_date + (number_of_weeks * 7) - 1)\n```\n:::\n\n\nFinding the weekly cases in every village\n\n::: {.cell}\n\n```{.r .cell-code}\naggregated_dengue_cases_summary <- joined_data %>%\n  group_by(VILLCODE, VILLNAME, VILLENG, number_of_weeks, week_end_date, geometry) %>%\n  summarise(total_cases = sum(CASE_COUNT, na.rm = TRUE), .groups = 'drop')\n```\n:::\n\n\nConfirming that the dates are in Date format and arranging the data frame in ascending order by date\n\n::: {.cell}\n\n```{.r .cell-code}\naggregated_dengue_cases_summary$week_end_date <- as.Date(aggregated_dengue_cases_summary$week_end_date)\n\naggregated_dengue_cases_summary <- aggregated_dengue_cases_summary %>%\n  arrange(week_end_date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naggregated_dengue_cases_summary <- st_as_sf(aggregated_dengue_cases_summary)\n```\n:::\n\n\nFinally, converting the dataframe into a spacetime cube (Used for Emerging Hotspot Analysis later)\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_cases_stcube <- as_spacetime(aggregated_dengue_cases_summary, .loc_col = \"VILLCODE\", .time_col = \"week_end_date\")\n```\n:::\n\n\nVerifying if the conversion to a spacetime object was successful. If that's the case than the value returned by the code chunk should be True\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime(dengue_cases_stcube)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nis_spacetime_cube(dengue_cases_stcube)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nData Preparation complete\n\nNow visualising all neighbouring villages using Queen's contiguity\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- aggregated_dengue_cases_summary %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \n\nwm_q\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 5140 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  WGS 84\n# A tibble: 5,140 × 9\n   nb          wt     VILLCODE    VILLNAME VILLENG number_of_weeks week_end_date\n * <nb>        <list> <chr>       <chr>    <chr>             <dbl> <date>       \n 1 <int [199]> <dbl>  67000270001 太子里   Taizi …              31 2023-08-06   \n 2 <int [79]>  <dbl>  67000270002 土庫里   Tuku V…              31 2023-08-06   \n 3 <int [119]> <dbl>  67000270003 一甲里   Yijia …              31 2023-08-06   \n 4 <int [259]> <dbl>  67000270004 仁德里   Rende …              31 2023-08-06   \n 5 <int [79]>  <dbl>  67000270005 仁義里   Renyi …              31 2023-08-06   \n 6 <int [99]>  <dbl>  67000270006 新田里   Xintia…              31 2023-08-06   \n 7 <int [119]> <dbl>  67000270007 後壁里   Houbi …              31 2023-08-06   \n 8 <int [119]> <dbl>  67000270008 上崙里   Shangl…              31 2023-08-06   \n 9 <int [119]> <dbl>  67000270011 保安里   Bao'an…              31 2023-08-06   \n10 <int [299]> <dbl>  67000270012 成功里   Chengg…              31 2023-08-06   \n# ℹ 5,130 more rows\n# ℹ 2 more variables: geometry <POLYGON [°]>, total_cases <dbl>\n```\n:::\n:::\n\n\nConducting the Global Moran I test to visualise \n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI <- global_moran(wm_q$total_cases,\n                       wm_q$nb,\n                       wm_q$wt)\n\nglimpse(moranI)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 2\n $ I: num 0.15\n $ K: num 17.1\n```\n:::\n:::\n\n\nConducting a monte-carlo simulation using Global moran permutation test to find the p value of our dataset. 1000 simulations would be conducted.\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nglobal_moran_perm(wm_q$total_cases,\n                       wm_q$nb,\n                       wm_q$wt,\n                  nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.14972, observed rank = 1000, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n:::\n:::\n\n\nNext, we would be finding the local moran I value at the village level to do a village-level analyses by conducting 100 simulations on our data for each area\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_study_area <- wm_q %>% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lisa_study_area$ii)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.65337 -0.02873  0.04479  0.14972  0.22983  8.60789 \n```\n:::\n:::\n\n\nVisualising Moran's I value and p-value of our data onto the maps for our study area to visualise both of them together. Both maps in tandem with each other would be used to identify clusters of dengue cases in the defined study area. \n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n\nmap_local_moran_i <- tm_shape(lisa_study_area) +\n  tm_polygons(\"ii\", \n              title = \"Local Moran's I\",\n              palette = \"-RdYlGn\", \n              style = \"quantile\", \n              n = 5) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Local Moran's I of Total Cases in Study Area\",\n            main.title.size = 0.8)\n\nmap_pvalue_local_moran <- tm_shape(lisa_study_area) +\n  tm_polygons(\"p_ii\",\n              title = \"p-value\",\n              palette = \"-YlOrRd\", \n              breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"< 0.001\", \"0.001-0.01\", \"0.01-0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Local Moran's I (Study Area)\",\n            main.title.size = 0.8)\n\n\ntmap_arrange(map_local_moran_i, map_pvalue_local_moran, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\nNow, clusters from the dataset would be identified. Areas with a High-Low mean or Low-High mean would be considered outliers whilst areas having a Low-Low mean or High-High mean would be considered Dengue clusters in study area. We would also categorically filter statistically significant areas i.e. p value < 0.05\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_statistically_significant <- lisa_study_area %>%\n  filter(p_ii < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(lisa_study_area) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  \ntm_shape(lisa_study_area) +\n  tm_fill(col = \"mean\") + \n  tm_borders(alpha = 0.4) +\n  \ntm_layout(\n  main.title = \"Dengue Clusters in Study Area\",\n  main.title.size = 1.0\n) +\n  \ntm_compass(type = \"4star\", position = c(\"left\", \"top\"))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\nNevertheless, it is imperative that there is a presence of dengue clusters in the outskirts of our study area i.e. the green areas whilst the centre seems to...\n\nHotspot and Coldspot analyses using the inverse distance matrix\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw <- aggregated_dengue_cases_summary %>%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n```\n:::\n\n\nMoving on to the hot-spot and cold-spot analysis for dengue cases across the given study area\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_dengue_cases <- wm_idw %>% \n  mutate(local_Gi = local_gstar_perm(\n    aggregated_dengue_cases_summary$total_cases, nb, wt, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\nHCSA_dengue_cases\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 5140 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0627 ymin: 22.89401 xmax: 120.2925 ymax: 23.09144\nGeodetic CRS:  WGS 84\n# A tibble: 5,140 × 17\n   gi_star    e_gi   var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     <dbl>   <dbl>    <dbl>   <dbl>   <dbl>        <dbl>    <dbl>    <dbl> <nb> \n 1  -2.41  1.94e-4 4.49e-10  -2.28  2.27e-2        0.012    0.006    0.288 <int>\n 2  -2.79  1.92e-4 1.01e- 9  -2.77  5.65e-3        0.002    0.001    0.278 <int>\n 3  -0.318 1.95e-4 6.88e-10  -0.325 7.45e-1        0.774    0.387    0.329 <int>\n 4   2.45  1.94e-4 3.13e-10   2.45  1.41e-2        0.026    0.013    0.133 <int>\n 5   0.604 1.94e-4 1.11e- 9   0.606 5.44e-1        0.54     0.271    0.298 <int>\n 6  -0.217 1.93e-4 8.94e-10  -0.170 8.65e-1        0.91     0.453    0.204 <int>\n 7  -3.00  1.95e-4 7.11e-10  -2.97  3.03e-3        0.002    0.001    0.183 <int>\n 8  -5.27  1.93e-4 6.92e-10  -5.19  2.06e-7        0.002    0.001    0.260 <int>\n 9  -4.93  1.93e-4 7.12e-10  -4.82  1.45e-6        0.002    0.001    0.295 <int>\n10  -5.72  1.95e-4 2.93e-10  -5.49  4.00e-8        0.002    0.001    0.106 <int>\n# ℹ 5,130 more rows\n# ℹ 8 more variables: wts <list>, VILLCODE <chr>, VILLNAME <chr>,\n#   VILLENG <chr>, number_of_weeks <dbl>, week_end_date <date>,\n#   geometry <POLYGON [°]>, total_cases <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(HCSA_dengue_cases$gi_star)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-7.7244 -3.0531 -0.1416  0.2046  2.8584 12.2829 \n```\n:::\n:::\n\n\nVisualising Gi values and p-value of our data onto the maps for our study area to visualise both of them together. Both maps in tandem with each other would be used to identify hot spots and cold spots of dengue cases in the defined study area.\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n\nmap_gi_values <- tm_shape(HCSA_dengue_cases) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Dengue Cases in Study Area\",\n            main.title.size = 0.8)\n\nmap_pvalue_HSCA <- tm_shape(HCSA_dengue_cases) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"< 0.001\", \"0.001-0.01\", \"0.01-0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  \n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map_gi_values, map_pvalue_HSCA, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\nHot-spots and cold-spots from the dataset would be identified. Areas with a significantly high GI would be considered hotspots whereas areas having a Low GI would be considered cold-spots in study area. We would also categorically filter statistically significant areas i.e. p value < 0.05\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_statistically_significant <- HCSA_dengue_cases %>%\n  filter(p_sim < 0.05)\n\n\ntmap_mode(\"plot\")\nmap <- tm_shape(HCSA_dengue_cases) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\n  tm_shape(HCSA_statistically_significant) + \n  tm_fill(col = \"gi_star\") +\n  tm_borders(alpha = 0.4) +\n  tm_layout(\n    main.title = \"Hot-Spots and Cold-Spots in Study Area\",\n    main.title.size = 1.0\n  ) +\n  tm_compass(type = \"4star\", position = c(\"left\", \"top\"))\n\nmap\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\nBased on the data it is imperative that there are four coldspots (denoted in orange) having a gi star value below -5 and there are five hotspots (Denoted in Green) having a gi star value above 5 (or even 10). It appears that areas that are cold-spots (distant from the central part of our study area) have a lower spread of dengue cases whilst areas closer to the centre tend to be hotspot indicating that the outbreak of Dengue is more prevalent in the central part of our study area. \n\nPerforming an emerging hotspot analysis gauging the spread of dengue in all villages over a period of time.\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_cases_nb <- dengue_cases_stcube %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\nRe-calculating the local Gi for each region\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars <- dengue_cases_nb %>%\n  group_by(number_of_weeks) %>%\n  mutate(gi_star = local_gstar_perm(total_cases, nb, wt)) %>%\n  ungroup() %>%\n  tidyr::unnest(cols = c(gi_star))\n```\n:::\n\n\nMann Kendall Test to evaluate trends in one village eg. Renyi Village\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_stars %>% \n  ungroup() %>% \n  filter(VILLENG == \"Renyi Vil.\") |> \n  select(VILLENG, number_of_weeks, total_cases, gi_star)\n```\n:::\n\n\nVisualising gi star values over different epidemiological weeks\n\n::: {.cell}\n\n```{.r .cell-code}\nGI_star_plot <- ggplot(data = cbg, \n       aes(x = number_of_weeks, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(GI_star_plot)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-af4a9ce35925c12bf1ff\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-af4a9ce35925c12bf1ff\">{\"x\":{\"data\":[{\"x\":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"y\":[0.4624046517229724,-0.045601935130674849,0.907083273285889,-0.46867926291763945,-0.30867898542839689,-0.23914664038013458,-0.26128198322118812,-0.46427190889417708,-0.91734990486490919,1.6602954982994524,0.3922084097948918,2.4905523141962345,1.4806412964116056,1.3486496332621467,2.3167373456423963,8.0340538571546301,6.6779452531991259,1.9528844623460948,3.2873331284596317,1.0328980137836972],\"text\":[\"number_of_weeks: 31<br />gi_star:  0.46240465\",\"number_of_weeks: 32<br />gi_star: -0.04560194\",\"number_of_weeks: 33<br />gi_star:  0.90708327\",\"number_of_weeks: 34<br />gi_star: -0.46867926\",\"number_of_weeks: 35<br />gi_star: -0.30867899\",\"number_of_weeks: 36<br />gi_star: -0.23914664\",\"number_of_weeks: 37<br />gi_star: -0.26128198\",\"number_of_weeks: 38<br />gi_star: -0.46427191\",\"number_of_weeks: 39<br />gi_star: -0.91734990\",\"number_of_weeks: 40<br />gi_star:  1.66029550\",\"number_of_weeks: 41<br />gi_star:  0.39220841\",\"number_of_weeks: 42<br />gi_star:  2.49055231\",\"number_of_weeks: 43<br />gi_star:  1.48064130\",\"number_of_weeks: 44<br />gi_star:  1.34864963\",\"number_of_weeks: 45<br />gi_star:  2.31673735\",\"number_of_weeks: 46<br />gi_star:  8.03405386\",\"number_of_weeks: 47<br />gi_star:  6.67794525\",\"number_of_weeks: 48<br />gi_star:  1.95288446\",\"number_of_weeks: 49<br />gi_star:  3.28733313\",\"number_of_weeks: 50<br />gi_star:  1.03289801\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":31.415525114155255},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[30.050000000000001,50.950000000000003],\"tickmode\":\"array\",\"ticktext\":[\"35\",\"40\",\"45\",\"50\"],\"tickvals\":[35,40,45,50],\"categoryorder\":\"array\",\"categoryarray\":[\"35\",\"40\",\"45\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"number_of_weeks\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1.3649200929658862,8.4816240452556073],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"2\",\"4\",\"6\",\"8\"],\"tickvals\":[0,2,4.0000000000000009,6,7.9999999999999991],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"2\",\"4\",\"6\",\"8\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"90b078e24cc2\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"90b078e24cc2\",\"visdat\":{\"90b078e24cc2\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nPerforming an emerging hotspot analyses on all villages using Mann Kendall's test \n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- gi_stars %>%\n  group_by(VILLCODE, VILLNAME, VILLENG) %>%\n  summarise(mk = list(\n    unclass(Kendall::MannKendall(gi_star))\n  ), .groups = 'drop') %>%  \n  tidyr::unnest_wider(mk)\n```\n:::\n\n\nSlicing the top 5 emerging hotspots\n\n::: {.cell}\n\n```{.r .cell-code}\nemerging <- ehsa %>% \n  arrange(sl, abs(tau)) %>% \n  slice(1:5)\n```\n:::\n\n\nPrinting the name of the top 5 emerging hotspots\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(emerging$VILLENG)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Fuqian Vil.\"   \"Chongxin Vil.\" \"Wuwang Vil.\"   \"Chongxue Vil.\"\n[5] \"Chongde Vil.\" \n```\n:::\n:::\n\nConducting an emerging hotspot analyses on the spacetime cube using 100 simulations to gauge which villages became emerging hotspots over a period of time due to the increaing spread of dengue across our study area.\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- emerging_hotspot_analysis(\n  x = dengue_cases_stcube, \n  .var = \"total_cases\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n\nVisualising the distribution of different EHSA classes\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa, aes(x = classification)) +\n  geom_bar() +\n  ggtitle(\"Frequency of Emerging Hotspot Analysis: Categories\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\nVisualising emerging hot-spot analysis for different villages in the study area\n\n::: {.cell}\n\n```{.r .cell-code}\ntaiwan_ehsa <- aggregated_dengue_cases_summary %>%\n  left_join(ehsa,\n            by = join_by(VILLCODE == location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_statistically_significant <- taiwan_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(taiwan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_statistically_significant) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\nBased on the results, it appears that there were a number of villages in Central and North-east of our study area over the period of 20 epidemiological weeks. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}